redesign of code structure count : 4 fuck it one hot everything spatial complexity is for pussies 
remember kids everything is in O(1) if u store everything

will have to do clean error reporting (I mean flags r cool n stuff but custom messages
would be nice)

the done section writes every step I did ; some of them are obsolete (for example I changed 
implem of graphs multiple times) but it's a good way to track my progress
done : 
    - graphs are kinda implemented
        - I can add stuf to them 
        - I can print them (I can't load them from a file yet though)

        - I can also load them let's go 
    
    - script can load a city into a networkx graph thingy (easy part) 

    - walker structure pretty much done 

    - apparently I wrote a tactics structure I didn't even remember it 

    - rewrote the graph implem in the GraphTable structure 

    - wrote the table manip fn ; haven't tested them yet

    - graph table fully implmented 

    - deleted deprecated stuff

    - implemented some of the movement ; tested it 

    - finished the python script ( written the discretisation function and functions to read / 
      write custom CSVs ) nb : the loadCSV function doesn't care for flux atm but it will at some
      point 

    - test the new wte structure 
    - test the updated graph_table functions 

    - movement mostly done ; problem with the update of flux for some 
      fucking reason

    -fix the fucking flux

    - do some proper testing of simulations (kinda)

    - write the tactics stuff (not tested )

    - write propper error reporting 


pending :  
        
    - put error reporting at the right place 
    - re implement tactics 

    - change usage of rand() with something better

    - write a wrapper around trace dump

    - write the actual main n maybe do a script to call stuff in bash or smtg 
    
    - organise the repos ffs 

    - create an archive of the CSV files of the graphs 

    - if I have the time use custom malloc 

    - think about a smarter implem or something

    - write some actual data analysis functions on the graphs in C
